# Laboratorio 25-C: "Backend de Redis con dos réplicas"
 
# Este laboratorio aprenderemos a desplegar una app con in Fronend y un  Backend de Redis con dos réplicas (master y slave)
# Requisitos:
#
#   1) Una máquina virtual con Ubuntu 20.04 LTS a la que poder hacer ssh.
#
#   2)  Tener instalado el runtime de podman. (ver lab-06-A.txt, Ejercicio 1 y 2)


##################################################
# Ejercicio 1:  Despliegue del maestro de Redis. #
##################################################

# Vamos desplegar una app con un frontend y backend de redis (un master y dos réplicas)
# Cambiamos al directorio de trabajo.

cd ~/k8s_desarrolladores/25

# Desplegamos el backend del maestro de redis. Abrimos el achivo 'lab-25-redis-master-deployment.yaml'


code lab-25-redis-master-deployment.yaml




kubectl apply -f redis-master-deployment.yaml

# Mientras, lo estudiamos.
code redis-master-deployment.yaml

# Examinamos el Despliegue.
kubectl get all

# Detalles del deployment.
kubectl describe deployment/redis-master

# Borramos el deployment desde la línea de comandos.
kubectl delete deployment/redis-master

# Comprobar que se elimina.
kubectl get all

# Ahora vamos a hacer lo mismo pero usando un ConfigMap.
# Hay dos formas de crear un ConfigMap: Desde un archivo de texto o desde un archivo yaml.



# Limpiamos recursos.



# Comprobamos que solo quede el servicio de Kubernetes:

kubectl get all

#######################
# FIN DEL LABORATORIO #
#######################
